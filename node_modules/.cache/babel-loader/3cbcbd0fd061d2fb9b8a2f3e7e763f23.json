{"ast":null,"code":"import React from'react';import AppBar from'@material-ui/core/AppBar';import Avatar from'@material-ui/core/Avatar';import Button from'@material-ui/core/Button';import Grid from'@material-ui/core/Grid';import HelpIcon from'@material-ui/icons/Help';import Hidden from'@material-ui/core/Hidden';import IconButton from'@material-ui/core/IconButton';import Link from'@material-ui/core/Link';import MenuIcon from'@material-ui/icons/Menu';import NotificationsIcon from'@material-ui/icons/Notifications';import Tab from'@material-ui/core/Tab';import Tabs from'@material-ui/core/Tabs';import Toolbar from'@material-ui/core/Toolbar';import Tooltip from'@material-ui/core/Tooltip';import Typography from'@material-ui/core/Typography';import{withStyles}from'@material-ui/core/styles';var lightColor='rgba(255, 255, 255, 0.7)';var styles=function styles(theme){return{secondaryBar:{zIndex:0},menuButton:{marginLeft:-theme.spacing(1)},iconButtonAvatar:{padding:4},link:{textDecoration:'none',color:lightColor,'&:hover':{color:theme.palette.common.white}},button:{borderColor:lightColor}};};function Header(props){var classes=props.classes,onDrawerToggle=props.onDrawerToggle;return React.createElement(React.Fragment,null,React.createElement(AppBar,{color:\"primary\",position:\"sticky\",elevation:0},React.createElement(Toolbar,null,React.createElement(Grid,{container:true,spacing:1,alignItems:\"center\"},React.createElement(Hidden,{smUp:true},React.createElement(Grid,{item:true},React.createElement(IconButton,{color:\"inherit\",\"aria-label\":\"open drawer\",onClick:onDrawerToggle,className:classes.menuButton},React.createElement(MenuIcon,null)))),React.createElement(Grid,{item:true,xs:true}),React.createElement(Grid,{item:true},React.createElement(Link,{className:classes.link,href:\"#\",variant:\"body2\"},\"Go to docs\")),React.createElement(Grid,{item:true},React.createElement(Tooltip,{title:\"Alerts \\u2022 No alerts\"},React.createElement(IconButton,{color:\"inherit\"},React.createElement(NotificationsIcon,null)))),React.createElement(Grid,{item:true},React.createElement(IconButton,{color:\"inherit\",className:classes.iconButtonAvatar},React.createElement(Avatar,{src:\"/static/images/avatar/1.jpg\",alt:\"My Avatar\"})))))),React.createElement(AppBar,{component:\"div\",className:classes.secondaryBar,color:\"primary\",position:\"static\",elevation:0},React.createElement(Toolbar,null,React.createElement(Grid,{container:true,alignItems:\"center\",spacing:1},React.createElement(Grid,{item:true,xs:true},React.createElement(Typography,{color:\"inherit\",variant:\"h5\",component:\"h1\"},\"Authentication\")),React.createElement(Grid,{item:true},React.createElement(Button,{className:classes.button,variant:\"outlined\",color:\"inherit\",size:\"small\"},\"Web setup\")),React.createElement(Grid,{item:true},React.createElement(Tooltip,{title:\"Help\"},React.createElement(IconButton,{color:\"inherit\"},React.createElement(HelpIcon,null))))))),React.createElement(AppBar,{component:\"div\",className:classes.secondaryBar,color:\"primary\",position:\"static\",elevation:0},React.createElement(Tabs,{value:0,textColor:\"inherit\"},React.createElement(Tab,{textColor:\"inherit\",label:\"Users\"}),React.createElement(Tab,{textColor:\"inherit\",label:\"Sign-in method\"}),React.createElement(Tab,{textColor:\"inherit\",label:\"Templates\"}),React.createElement(Tab,{textColor:\"inherit\",label:\"Usage\"}))));}export default withStyles(styles)(Header);","map":{"version":3,"sources":["/home/lucky/Code/react-try/src/Header.js"],"names":["React","AppBar","Avatar","Button","Grid","HelpIcon","Hidden","IconButton","Link","MenuIcon","NotificationsIcon","Tab","Tabs","Toolbar","Tooltip","Typography","withStyles","lightColor","styles","theme","secondaryBar","zIndex","menuButton","marginLeft","spacing","iconButtonAvatar","padding","link","textDecoration","color","palette","common","white","button","borderColor","Header","props","classes","onDrawerToggle"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport HelpIcon from '@material-ui/icons/Help';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst lightColor = 'rgba(255, 255, 255, 0.7)';\n\nconst styles = theme => ({\n  secondaryBar: {\n    zIndex: 0,\n  },\n  menuButton: {\n    marginLeft: -theme.spacing(1),\n  },\n  iconButtonAvatar: {\n    padding: 4,\n  },\n  link: {\n    textDecoration: 'none',\n    color: lightColor,\n    '&:hover': {\n      color: theme.palette.common.white,\n    },\n  },\n  button: {\n    borderColor: lightColor,\n  },\n});\n\nfunction Header(props) {\n  const { classes, onDrawerToggle } = props;\n\n  return (\n    <React.Fragment>\n      <AppBar color=\"primary\" position=\"sticky\" elevation={0}>\n        <Toolbar>\n          <Grid container spacing={1} alignItems=\"center\">\n            <Hidden smUp>\n              <Grid item>\n                <IconButton\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  onClick={onDrawerToggle}\n                  className={classes.menuButton}\n                >\n                  <MenuIcon />\n                </IconButton>\n              </Grid>\n            </Hidden>\n            <Grid item xs />\n            <Grid item>\n              <Link className={classes.link} href=\"#\" variant=\"body2\">\n                Go to docs\n              </Link>\n            </Grid>\n            <Grid item>\n              <Tooltip title=\"Alerts â€¢ No alerts\">\n                <IconButton color=\"inherit\">\n                  <NotificationsIcon />\n                </IconButton>\n              </Tooltip>\n            </Grid>\n            <Grid item>\n              <IconButton color=\"inherit\" className={classes.iconButtonAvatar}>\n                <Avatar src=\"/static/images/avatar/1.jpg\" alt=\"My Avatar\" />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n      <AppBar\n        component=\"div\"\n        className={classes.secondaryBar}\n        color=\"primary\"\n        position=\"static\"\n        elevation={0}\n      >\n        <Toolbar>\n          <Grid container alignItems=\"center\" spacing={1}>\n            <Grid item xs>\n              <Typography color=\"inherit\" variant=\"h5\" component=\"h1\">\n                Authentication\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Button className={classes.button} variant=\"outlined\" color=\"inherit\" size=\"small\">\n                Web setup\n              </Button>\n            </Grid>\n            <Grid item>\n              <Tooltip title=\"Help\">\n                <IconButton color=\"inherit\">\n                  <HelpIcon />\n                </IconButton>\n              </Tooltip>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n      <AppBar\n        component=\"div\"\n        className={classes.secondaryBar}\n        color=\"primary\"\n        position=\"static\"\n        elevation={0}\n      >\n        <Tabs value={0} textColor=\"inherit\">\n          <Tab textColor=\"inherit\" label=\"Users\" />\n          <Tab textColor=\"inherit\" label=\"Sign-in method\" />\n          <Tab textColor=\"inherit\" label=\"Templates\" />\n          <Tab textColor=\"inherit\" label=\"Usage\" />\n        </Tabs>\n      </AppBar>\n    </React.Fragment>\n  );\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onDrawerToggle: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(Header);"]},"metadata":{},"sourceType":"module"}